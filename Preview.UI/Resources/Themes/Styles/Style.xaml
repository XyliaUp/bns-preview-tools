<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:hc="https://handyorg.github.io/handycontrol"
                    xmlns:avalonedit="http://icsharpcode.net/sharpdevelop/avalonedit"
                    xmlns:UI="https://github.com/xyliaup/bns-preview-tools">

	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="../Basic/Brushes.xaml" />
		<ResourceDictionary Source="../Basic/Fonts.xaml" />
	</ResourceDictionary.MergedDictionaries>

	<Style x:Key="TabItemTransparent" BasedOn="{StaticResource TabItemInLine}" TargetType="TabItem">
		<Setter Property="Background" Value="Transparent" />
	</Style>

	<Style x:Key="ListBoxItemTransparent" BasedOn="{StaticResource ListBoxItemBaseStyle}" TargetType="ListBoxItem">
		<Setter Property="Visibility" Value="{Binding IsVisible,Converter={StaticResource Boolean2VisibilityConverter}}" />
		<Setter Property="Background" Value="Transparent" />
	</Style>

	<Style x:Key="ListBoxTransparent" BasedOn="{StaticResource ListBoxBaseStyle}" TargetType="ListBox">
		<Setter Property="hc:BorderElement.CornerRadius" Value="4" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="ItemContainerStyle" Value="{StaticResource ListBoxItemTransparent}" />
		<Setter Property="hc:ScrollViewer.IsInertiaEnabled" Value="True" />
	</Style>

	<Style x:Key="MessageBoxCustom" TargetType="hc:MessageBox" BasedOn="{StaticResource {x:Type hc:MessageBox}}">
		<Setter Property="NonClientAreaBackground" Value="#262e2f" />
		<Setter Property="OtherButtonHoverBackground" Value="#888580" />
		<Setter Property="OtherButtonForeground" Value="White" />
		<Setter Property="OtherButtonHoverForeground" Value="White" />
		<Setter Property="NonClientAreaForeground" Value="White" />
		<Setter Property="CloseButtonForeground" Value="White" />
		<Setter Property="Icon" Value="/HandyControlDemo;component/Resources/Img/icon.ico" />
	</Style>

	<Style TargetType="avalonedit:TextEditor">
		<Setter Property="FontFamily" Value="Consolas" />
		<Setter Property="Margin" Value="4" />
		<Setter Property="LineNumbersForeground" Value="{DynamicResource EditorLineNumbersForeground}" />
		<Setter Property="Foreground" Value="{DynamicResource EditorForeground}" />
		<Setter Property="Background" Value="{DynamicResource RegionBrush}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="avalonedit:TextEditor">
					<ControlTemplate.Resources>
						<Style TargetType="avalonedit:TextView">
							<Setter Property="NonPrintableCharacterBrush" Value="{DynamicResource EditorNonPrintableCharacterBrush}" />
							<Setter Property="LinkTextForegroundBrush" Value="{DynamicResource EditorLinkTextForegroundBrush}" />
							<Setter Property="LinkTextBackgroundBrush" Value="{DynamicResource EditorLinkTextBackgroundBrush}" />
						</Style>
						<Style TargetType="avalonedit:TextArea">
							<Setter Property="FocusVisualStyle" Value="{x:Null}" />
							<Setter Property="SelectionBrush" Value="{DynamicResource EditorSelectionBrush}" />
							<Setter Property="SelectionBorder">
								<Setter.Value>
									<Pen Brush="{DynamicResource EditorSelectionBorder}" Thickness="1" />
								</Setter.Value>
							</Setter>
							<Setter Property="SelectionCornerRadius" Value="0" />
							<Setter Property="SelectionForeground" Value="{DynamicResource TextIconBrush}" />
							<Setter Property="Template">
								<Setter.Value>
									<ControlTemplate TargetType="avalonedit:TextArea">
										<DockPanel Focusable="False">
											<ItemsControl DockPanel.Dock="Left" Focusable="False" ItemsSource="{Binding LeftMargins,RelativeSource={RelativeSource TemplatedParent}}">
												<ItemsControl.ItemsPanel>
													<ItemsPanelTemplate>
														<StackPanel Orientation="Horizontal" />
													</ItemsPanelTemplate>
												</ItemsControl.ItemsPanel>
											</ItemsControl>
											<ContentPresenter Panel.ZIndex="-1" Content="{Binding TextView,RelativeSource={RelativeSource TemplatedParent}}" Focusable="False" />
										</DockPanel>
									</ControlTemplate>
								</Setter.Value>
							</Setter>
						</Style>
					</ControlTemplate.Resources>
					<Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
						<hc:ScrollViewer IsInertiaEnabled="True" Name="PART_ScrollViewer" Padding="{TemplateBinding Padding}" HorizontalContentAlignment="Left" VerticalContentAlignment="Top" CanContentScroll="True" Content="{Binding TextArea,RelativeSource={RelativeSource TemplatedParent}}" Focusable="False" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="WordWrap" Value="True">
							<Setter TargetName="PART_ScrollViewer" Property="HorizontalScrollBarVisibility" Value="Disabled" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>


	<Style x:Key="SegoeIcon">
		<Setter Property="TextElement.FontFamily" Value="{StaticResource SegoeAssets}" />
		<Setter Property="Control.FontFamily" Value="{StaticResource SegoeAssets}" />
		<Setter Property="FrameworkElement.VerticalAlignment" Value="Center" />
	</Style>

	<Style x:Key="TransparentButton" TargetType="{x:Type Button}">
		<Setter Property="BorderThickness" Value="1.5" />
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
		<Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
		<Setter Property="OverridesDefaultStyle" Value="True" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}">
						<ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Content="{TemplateBinding Content}"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Opacity"  Value="0.7"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="Opacity"  Value="0.5"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Foreground" Value="{DynamicResource SecondaryTextBrush}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="TransparentToggleButton" TargetType="{x:Type ToggleButton}">
		<Setter Property="BorderThickness" Value="1.5" />
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
		<Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
		<Setter Property="OverridesDefaultStyle" Value="True" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border x:Name="PART_Border" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}">
						<ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Content="{TemplateBinding Content}"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Opacity" Value="0.7"/>
							<Setter Property="Background" Value="{DynamicResource SecondaryRegionBrush}" TargetName="PART_Border"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="Opacity" Value="0.5"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Foreground" Value="{DynamicResource SecondaryTextBrush}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="BnsTooltip" TargetType="ToolTip">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate>
					<Border Background="{DynamicResource BackgroundBrush}" BorderThickness="1" Padding="2 3">
						<UI:BnsCustomLabelWidget Text="{TemplateBinding ContentControl.Content}" Foreground="White" FontSize="13.5"/>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>
