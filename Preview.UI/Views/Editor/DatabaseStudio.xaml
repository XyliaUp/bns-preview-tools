<Window x:Class="Xylia.Preview.UI.Views.Editor.DatabaseStudio"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
		xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d"
		xmlns:avalonEdit="http://icsharpcode.net/sharpdevelop/avalonedit"
		xmlns:hc="https://handyorg.github.io/handycontrol"
		Title="{DynamicResource DatabaseStudio_Name}" Height="800" Width="1200">
	<Window.Resources>
		<ContextMenu x:Key="TableMenu">
			<MenuItem Header="{DynamicResource DatabaseStudio_ViewTable}" Click="ViewTable_Click">
				<MenuItem.Icon>
					<TextBlock Text="&#xE8FD;" Style="{StaticResource SegoeIcon}" />
				</MenuItem.Icon>
			</MenuItem>
			<MenuItem Header="{DynamicResource DatabaseStudio_ViewDefinition}" Click="ViewDefinition_Click" Visibility="Collapsed">
				<MenuItem.Icon>
					<TextBlock Text="&#xE8FD;" Style="{StaticResource SegoeIcon}" />
				</MenuItem.Icon>
			</MenuItem>

			<MenuItem Header="{DynamicResource DatabaseStudio_Extract}" Click="TableExport_Click">
				<MenuItem.Icon>
					<TextBlock Text="&#xE74E;" Style="{StaticResource SegoeIcon}" />
				</MenuItem.Icon>
			</MenuItem>
			<MenuItem Header="{DynamicResource DatabaseStudio_ExtractAll}" Click="TableExportAll_Click">
				<MenuItem.Icon>
					<TextBlock Text="&#xF12B;" Style="{StaticResource SegoeIcon}" />
				</MenuItem.Icon>
			</MenuItem>
		</ContextMenu>

		<ContextMenu x:Key="GridMenu">
			<MenuItem Header="Output as excel" Click="OutputExcel_Click">
				<MenuItem.Icon>
					<TextBlock Text="&#xE74E;" Style="{StaticResource SegoeIcon}" />
				</MenuItem.Icon>
			</MenuItem>
		</ContextMenu>
		<ContextMenu x:Key="TextMenu">
			<MenuItem Header="Indent" IsCheckable="True" IsChecked="{Binding IndentText}">
				<MenuItem.Icon>
					<TextBlock Text="" Style="{StaticResource SegoeIcon}" />
				</MenuItem.Icon>
			</MenuItem>
			<MenuItem Header="Output" Click="OutputText_Click">
				<MenuItem.Icon>
					<TextBlock Text="&#xE74E;" Style="{StaticResource SegoeIcon}" />
				</MenuItem.Icon>
			</MenuItem>
		</ContextMenu>
	</Window.Resources>

	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" />
			<RowDefinition Height="*" />
			<RowDefinition Height="Auto" />
		</Grid.RowDefinitions>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="300" />
			<ColumnDefinition Width="*" />
		</Grid.ColumnDefinitions>

		<!-- Function -->
		<ToolBarTray Grid.ColumnSpan="2" >
			<ToolBar Band="0" BandIndex="0">
				<Button Name="Connect" Click="Connect_Click" Style="{x:Null}">
					<StackPanel Orientation="Horizontal">
						<Image Source="/Resources/Images/database_connect.png" />

						<TextBlock Margin="3,2,0,0" d:Text="Connect" Text="{DynamicResource DatabaseStudio_Connect}" Visibility="{Binding ConnectStatus,Converter={StaticResource Boolean2VisibilityReConverter}}"/>
						<TextBlock Margin="3,2,0,0" d:Text="Disconnect" Text="{DynamicResource DatabaseStudio_Disconnect}" Visibility="{Binding ConnectStatus,Converter={StaticResource Boolean2VisibilityConverter}}" d:Visibility="Collapsed"/>
					</StackPanel>
				</Button>
				<Separator />


				<Button Click="Refresh_Click" Style="{x:Null}">
					<StackPanel Orientation="Horizontal">
						<Image Source="/Resources/Images/arrow_refresh.png" />
						<TextBlock Margin="3,2,3,0" d:Text="Refresh" Text="{DynamicResource Text_Refresh}"/>
					</StackPanel>
				</Button>
				<Separator />

				<Button x:Name="Run" Style="{x:Null}" Command="ApplicationCommands.Print">
					<StackPanel Orientation="Horizontal">
						<Image Source="/Resources/Images/resultset_next.png" />
						<TextBlock Margin="3,2,10,0" d:Text="Run" Text="{DynamicResource Text_Run}"/>
					</StackPanel>
				</Button>
			</ToolBar>

			<ToolBar Band="0" BandIndex="1" Visibility="Visible">
				<Button Click="Import_Click" Style="{x:Null}">
					<StackPanel Orientation="Horizontal">
						<Image Source="/Resources/Images/disk.png" />
						<TextBlock Margin="3,2,10,0" d:Text="Import" Text="{DynamicResource Text_Import}"/>
					</StackPanel>
				</Button>

				<Button Click="Save_Click" Style="{x:Null}">
					<StackPanel Orientation="Horizontal">
						<Image Source="/Resources/Images/disk.png" />
						<TextBlock Margin="3,2,10,0" d:Text="Save" Text="{DynamicResource Text_Save}"/>
					</StackPanel>
				</Button>
			</ToolBar>
		</ToolBarTray>

		<!-- Tree -->
		<TreeView x:Name="tvwDatabase" Grid.Row="1" Grid.RowSpan="3" MouseDoubleClick="TvwDatabase_MouseDoubleClick" ScrollViewer.HorizontalScrollBarVisibility="Disabled" />

		<TabControl x:Name="PageHolder" Grid.Row="1" Grid.Column="2">
			<TabItem x:Name="Page_SQL" Visibility="Collapsed">
				<Grid>
					<Grid.RowDefinitions>
						<RowDefinition Height="200" />
						<RowDefinition Height="*" />
						<RowDefinition Height="Auto" />
					</Grid.RowDefinitions>
					<Grid.Resources>
						<ContextMenu x:Key="EditorsMenu">
							<MenuItem d:Header="Load" Header="{DynamicResource DatabaseStudio_SqlLoad}" Click="LoadSql_Click" />
							<MenuItem d:Header="Save" Header="{DynamicResource DatabaseStudio_SqlSave}" Click="SaveSql_Click" />
						</ContextMenu>
					</Grid.Resources>

					<!-- Input -->
					<hc:TabControl Name="editors" ContextMenu="{StaticResource EditorsMenu}" 
								   IsAnimationEnabled="True" ShowCloseButton="True" IsDraggable="True" TabItemWidth="150">
						<TabControl.Resources>
							<Style TargetType="avalonEdit:TextEditor">
								<Setter Property="FontFamily" Value="Consolas" />
								<Setter Property="FontSize" Value="14" />
								<Setter Property="SyntaxHighlighting" Value="SQL" />
								<Setter Property="WordWrap" Value="False" />
							</Style>
						</TabControl.Resources>
					</hc:TabControl>

					<!-- Result -->
					<TabControl Grid.Row="1" Grid.Column="2" >
						<TabItem d:Header="Grid" Header="{DynamicResource DatabaseStudio_Grid}">
							<Grid>
								<DataGrid x:Name="QueryGrid" HorizontalScrollBarVisibility="Auto" ContextMenu="{StaticResource GridMenu}" Style="{x:Null}" 
				AutoGenerateColumns="True" IsReadOnly="True" SelectionUnit="CellOrRowHeader"
				EnableRowVirtualization="True" EnableColumnVirtualization="True" VirtualizingPanel.IsContainerVirtualizable="True" VirtualizingPanel.VirtualizationMode="Recycling" />
							</Grid>
						</TabItem>

						<TabItem d:Header="Text" Header="{DynamicResource DatabaseStudio_Text}">
							<avalonEdit:TextEditor Name="QueryText" SyntaxHighlighting="JSON" IsReadOnly="True" Padding="5" ContextMenu="{StaticResource TextMenu}" />
						</TabItem>
					</TabControl>
				</Grid>
			</TabItem>

			<TabItem x:Name="Page_Definition" Visibility="Collapsed">
				<Grid>
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto" />
						<RowDefinition Height="*" />
					</Grid.RowDefinitions>

					<Grid Grid.Row="0" >
						<Image Source="/Resources/Images/database_connect.png" MouseDown="ReturnBtn_MouseDownClick" Width="20" Height="20" />
					</Grid>

					<ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto">
						<ItemsControl ItemsSource="{Binding CurrentDefinition.Els}" ScrollViewer.VerticalScrollBarVisibility="Auto">
							<ItemsControl.ItemTemplate>
								<DataTemplate>
									<StackPanel>
										<!-- Element -->
										<ToggleButton Content="{Binding Name}" x:Name="ElName" HorizontalAlignment="Left"/>

										<!-- Attributes -->
										<ListView Grid.Row="1" HorizontalContentAlignment="Stretch" VirtualizingStackPanel.IsVirtualizing="True"
												ItemsSource="{Binding Attributes}" Visibility="{Binding IsChecked,ElementName=ElName,Converter={StaticResource Boolean2VisibilityConverter}}">
											<ListView.ItemContainerStyle>
												<Style TargetType="{x:Type ListViewItem}">
													<Setter Property="Focusable" Value="False"/>
												</Style>
											</ListView.ItemContainerStyle>
											<ListView.View>
												<GridView>
													<GridView.ColumnHeaderContainerStyle>
														<Style TargetType="GridViewColumnHeader">
															<Setter Property="Foreground" Value="Black" />
															<Setter Property="Background" Value="Transparent" />
														</Style>
													</GridView.ColumnHeaderContainerStyle>

													<GridViewColumn Header="Name">
														<GridViewColumn.CellTemplate>
															<DataTemplate>
																<TextBlock Text="{Binding Name}" />
															</DataTemplate>
														</GridViewColumn.CellTemplate>
													</GridViewColumn>
													<GridViewColumn Header="Type">
														<GridViewColumn.CellTemplate>
															<DataTemplate>
																<TextBlock Text="{Binding Type}" />
															</DataTemplate>
														</GridViewColumn.CellTemplate>
													</GridViewColumn>

													<GridViewColumn Header="IsDeprecated">
														<GridViewColumn.CellTemplate>
															<DataTemplate>
																<CheckBox IsChecked="{Binding IsDeprecated}" />
															</DataTemplate>
														</GridViewColumn.CellTemplate>
													</GridViewColumn>
													<GridViewColumn Header="IsKey">
														<GridViewColumn.CellTemplate>
															<DataTemplate>
																<CheckBox IsChecked="{Binding IsKey}" />
															</DataTemplate>
														</GridViewColumn.CellTemplate>
													</GridViewColumn>
													<GridViewColumn Header="IsRequired">
														<GridViewColumn.CellTemplate>
															<DataTemplate>
																<CheckBox IsChecked="{Binding IsRequired}" />
															</DataTemplate>
														</GridViewColumn.CellTemplate>
													</GridViewColumn>
													<GridViewColumn Header="IsHidden">
														<GridViewColumn.CellTemplate>
															<DataTemplate>
																<CheckBox IsChecked="{Binding IsHidden}" />
															</DataTemplate>
														</GridViewColumn.CellTemplate>
													</GridViewColumn>

													<GridViewColumn Header="Binary Offset">
														<GridViewColumn.CellTemplate>
															<DataTemplate>
																<TextBlock Text="{Binding Offset}" />
															</DataTemplate>
														</GridViewColumn.CellTemplate>
													</GridViewColumn>
												</GridView>
											</ListView.View>
										</ListView>
									</StackPanel>
								</DataTemplate>
							</ItemsControl.ItemTemplate>
						</ItemsControl>
					</ScrollViewer>
				</Grid>
			</TabItem>
		</TabControl>


		<!-- Tooltip -->
		<StackPanel Grid.Row="3" Grid.Column="1" Grid.ColumnSpan="99">
			<TextBlock x:Name="Status" HorizontalAlignment="Right" Margin="0 0 10 0" d:Text="Message" />
		</StackPanel>
		<StackPanel Grid.RowSpan="99" Grid.ColumnSpan="99" Panel.ZIndex="99" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="5" hc:Growl.Token="DatabaseStudio">
			<Grid Width="320" MinHeight="60" Margin="0 10 0 0" Visibility="{Binding Path=Visibility,ElementName=SaveMessage}">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="50" />
					<ColumnDefinition />
					<ColumnDefinition Width="Auto" />
				</Grid.ColumnDefinitions>
				<Grid.RowDefinitions>
					<RowDefinition />
					<RowDefinition Height="Auto" />
				</Grid.RowDefinitions>
				<Border Grid.ColumnSpan="3" Grid.RowSpan="2" Effect="{StaticResource EffectShadow2}" Background="{DynamicResource ThirdlyRegionBrush}" CornerRadius="8" />
				<Path FlowDirection="LeftToRight" Grid.Row="0" Grid.Column="0" VerticalAlignment="Top" Margin="0,15,0,0" Width="30" Height="30" Stretch="Uniform" Data="{DynamicResource SaveGeometry}" Fill="LightSkyBlue"/>
				<StackPanel VerticalAlignment="Center" Grid.Row="0" Grid.Column="1" Margin="0,10,10,10">
					<TextBlock x:Name="SaveMessage" Style="{StaticResource TextBlockDefault}" HorizontalAlignment="Left" TextWrapping="Wrap" Visibility="Collapsed" />
				</StackPanel>
				<Button Grid.Row="0" Margin="11,0" Command="ApplicationCommands.Close" Grid.Column="2" Background="Transparent" Style="{StaticResource ButtonCustom}" VerticalAlignment="Center" HorizontalAlignment="Center" Width="18" Height="18">
					<Path FlowDirection="LeftToRight" Data="{StaticResource ErrorGeometry}" Stretch="Uniform" Fill="{DynamicResource SecondaryTextBrush}" />
				</Button>
			</Grid>

		</StackPanel>
	</Grid>
</Window>
